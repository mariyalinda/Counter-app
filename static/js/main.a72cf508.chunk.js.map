{"version":3,"sources":["components/navbar.jsx","components/counter.jsx","components/counters.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","totalCounters","className","href","Counter","Fragment","this","props","id","getBadgeClasses","formatCount","onClick","OnIncrement","counter","OnDelete","classes","value","Component","Counters","OnReset","counters","map","App","state","handleIncrement","index","indexOf","setState","handleReset","c","handleDel","counterId","filter","console","log","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a72cf508.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n//stateless functional component\r\nconst Navbar = ({ totalCounters }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-light bg-light\">\r\n      <a className=\"navbar-brand\" href=\"#\">\r\n        Navbar{\" \"}\r\n        <span className=\"badge badge-pill badge-secondary\">\r\n          {totalCounters}\r\n        </span>\r\n      </a>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nclass Counter extends Component {\r\n  // state = {\r\n  //   value: this.props.counter.value,\r\n  //   // imageUrl: \"https://picsum.photos/200\",\r\n  //   // tags: [\"tag1\", \"tag2\", \"tag3\"],\r\n  // };\r\n\r\n  // constructor() {\r\n  //   super();\r\n  //   this.handleInc = this.handleInc.bind(this);\r\n  // }\r\n\r\n  // renderTag() {\r\n  //   if (this.state.tags.length === 0) return <p>There are no tags!</p>;\r\n  //   return (\r\n  //     <ul>\r\n  //       {this.state.tags.map((tag) => (\r\n  //         <li key={tag}>{tag}</li>\r\n  //       ))}\r\n  //     </ul>\r\n  //   );\r\n  // }\r\n  // handleInc = () => {\r\n  //   this.setState({ value: this.state.value + 1 });\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h4>{this.props.id}</h4>\r\n        {/* <img src={this.state.imageUrl} alt=\"\" /> */}\r\n        <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\r\n        <button\r\n          onClick={() => this.props.OnIncrement(this.props.counter)}\r\n          className=\"btn btn-secondary btn-sm\"\r\n        >\r\n          Increment\r\n        </button>\r\n        <button\r\n          onClick={() => this.props.OnDelete(this.props.counter.id)}\r\n          className=\"btn btn-danger btn-sm m-2\"\r\n        >\r\n          Delete\r\n        </button>\r\n        {/* {this.renderTag()} */}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  getBadgeClasses() {\r\n    let classes = \"badge m-2 badge-\";\r\n    classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\r\n    return classes;\r\n  }\r\n\r\n  formatCount() {\r\n    const { value } = this.props.counter;\r\n    return value === 0 ? \"Zero\" : value;\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import React, { Component } from \"react\";\r\nimport Counter from \"./counter\";\r\nclass Counters extends Component {\r\n  render() {\r\n    const { OnDelete, OnIncrement, OnReset, counters } = this.props;\r\n    return (\r\n      <div>\r\n        <button onClick={OnReset} className=\"btn btn-primary btn-sm m-2\">\r\n          Reset\r\n        </button>\r\n        {this.props.counters.map((counter) => (\r\n          <Counter\r\n            key={counter.id}\r\n            OnDelete={OnDelete}\r\n            OnIncrement={OnIncrement}\r\n            counter={counter}\r\n          >\r\n            <br></br>\r\n          </Counter>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counters;\r\n","import React, { Component } from \"react\";\nimport Navbar from \"./components/navbar\";\nimport \"./App.css\";\nimport Counters from \"./components/counters\";\nclass App extends Component {\n  state = {\n    counters: [\n      { id: 1, value: 0 },\n      { id: 2, value: 0 },\n      { id: 3, value: 0 },\n      { id: 4, value: 0 },\n    ],\n  };\n  constructor(props) {\n    super(props);\n    console.log(\"app - constructor\", this.props);\n  }\n\n  componentDidMount() {\n    console.log(\"App- Mounted\");\n  }\n  handleIncrement = (counter) => {\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    counters[index] = { ...counter };\n    counters[index].value++;\n    this.setState({ counters });\n  };\n  handleReset = () => {\n    const counters = this.state.counters.map((c) => {\n      c.value = 0;\n      return c;\n    });\n    this.setState({ counters });\n  };\n  handleDel = (counterId) => {\n    const counters = this.state.counters.filter((c) => c.id !== counterId);\n    this.setState({ counters });\n  };\n  render() {\n    console.log(\"App - rendered\");\n    return (\n      <React.Fragment>\n        <Navbar\n          totalCounters={this.state.counters.filter((c) => c.value > 0).length}\n        />\n        <main className=\"container\">\n          <Counters\n            counters={this.state.counters}\n            OnDelete={this.handleDel}\n            OnIncrement={this.handleIncrement}\n            OnReset={this.handleReset}\n          />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}